{"version":3,"sources":["NavBar.js","Home.js","ProductMenu.js","ProductItem.js","NewProductForm.js","Api.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","expand","exact","to","className","navbar","Home","snacks","drinks","length","ProductMenu","products","title","map","product","id","name","ProductItem","items","cantFind","useParams","find","description","recipe","serve","NewProductForm","addProduct","history","useHistory","INITIAL_STATE","productType","useState","formData","setFormData","handleChange","e","target","value","handleSubmit","preventDefault","push","onSubmit","check","type","onChange","for","placeholder","onClick","BASE_API_URL","SnackOrBoozeApi","axios","get","result","data","post","replace","toLowerCase","Routes","isLoading","setIsLoading","setSnacks","setDrinks","useEffect","getProducts","path","json","createProduct","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6624fe80.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.css';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\n\nfunction NavBar() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar expand=\"md\">\n\t\t\t\t<NavLink exact to=\"/\" className=\"navbar-brand\">\n\t\t\t\t\tüç¥Snack or Boozeüç∏\n\t\t\t\t</NavLink>\n\n\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink to=\"/snacks\">Snacks</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink to=\"/drinks\">Drinks</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink to=\"/new-product\">New Item</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\n\nfunction Home({ snacks, drinks }) {\n\treturn (\n\t\t<section className=\"col-md-8\">\n\t\t\t<Card>\n\t\t\t\t<CardBody className=\"text-center\">\n\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t<h3 className=\"font-weight-bold\">Welcome to Silicon Valley's premier dive cafe!</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWe have {snacks.length} different snacks & {drinks.length} different drinks...\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</CardTitle>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProductMenu.css';\nimport { Card, CardBody, CardTitle, CardText, ListGroup, ListGroupItem } from 'reactstrap';\n\nfunction ProductMenu({ products, title }) {\n\treturn (\n\t\t<section className=\"col-md-4\">\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">{title} Menu</CardTitle>\n\t\t\t\t\t<CardText>\n\t\t\t\t\t\tSome quick example text to build on the card title and make up the bulk of the card's content.\n\t\t\t\t\t</CardText>\n\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t{products.map((product) => (\n\t\t\t\t\t\t\t<Link to={`/${title}/${product.id}`} key={product.id}>\n\t\t\t\t\t\t\t\t<ListGroupItem>{product.name}</ListGroupItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n}\n\nexport default ProductMenu;\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\n\nfunction ProductItem({ items, cantFind }) {\n\tconst { id } = useParams();\n\n\tlet product = items.find((product) => product.id === id);\n\tif (!product) return <Redirect to={cantFind} />;\n\n\treturn (\n\t\t<section>\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">{product.name}</CardTitle>\n\t\t\t\t\t<CardText className=\"font-italic\">{product.description}</CardText>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Recipe:</b> {product.recipe}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Serve:</b> {product.serve}\n\t\t\t\t\t</p>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n}\n\nexport default ProductItem;\n","import React, { useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, Card, CardBody, CardTitle } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport './NewProductForm.css';\n\nconst NewProductForm = ({ addProduct }) => {\n\tlet history = useHistory();\n\tconst INITIAL_STATE = {\n\t\tproductType: '',\n\t\tname: '',\n\t\tdescription: '',\n\t\trecipe: '',\n\t\tserve: ''\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_STATE);\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({\n\t\t\t...formData,\n\t\t\t[name]: value\n\t\t}));\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\taddProduct({ ...formData });\n\t\tsetFormData(INITIAL_STATE);\n\t\thistory.push('/');\n\t};\n\treturn (\n\t\t<section className=\"col-md-4\">\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">New Menu Item Form</CardTitle>\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Label>Product Type</Label>\n\t\t\t\t\t\t<FormGroup check>\n\t\t\t\t\t\t\t<Input name=\"productType\" type=\"radio\" value=\"snacks\" onChange={handleChange} />{' '}\n\t\t\t\t\t\t\t<Label check>Snack</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup check>\n\t\t\t\t\t\t\t<Input name=\"productType\" type=\"radio\" value=\"drinks\" onChange={handleChange} />{' '}\n\t\t\t\t\t\t\t<Label check>Drink</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"name\">Product name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tvalue={formData.name}\n\t\t\t\t\t\t\t\tplaceholder=\"What is the name of the product?\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"description\">Product description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tvalue={formData.description}\n\t\t\t\t\t\t\t\tplaceholder=\"What is the description of the product?\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"recipe\">Product recipe</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"recipe\"\n\t\t\t\t\t\t\t\tname=\"recipe\"\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tvalue={formData.recipe}\n\t\t\t\t\t\t\t\tplaceholder=\"What is the recipe of the product?\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"serve\">Product serve</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"serve\"\n\t\t\t\t\t\t\t\tname=\"serve\"\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tvalue={formData.serve}\n\t\t\t\t\t\t\t\tplaceholder=\"How is the product served?\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<Button onClick={handleSubmit}>Submit</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default NewProductForm;\n","import axios from 'axios';\n\nconst BASE_API_URL = 'http://localhost:5000';\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass SnackOrBoozeApi {\n\tstatic async getProducts(productType) {\n\t\tconst result = await axios.get(`${BASE_API_URL}/${productType}`);\n\t\treturn result.data;\n\t}\n\n\tstatic async createProduct(data) {\n\t\tawait axios.post(`${BASE_API_URL}/${data.productType}`, {\n\t\t\tid: `${data.name.replace(/\\s+/g, '-').toLowerCase()}`,\n\t\t\tname: `${data.name}`,\n\t\t\tdescription: `${data.description}`,\n\t\t\trecipe: `${data.recipe}`,\n\t\t\tserve: `${data.serve}`\n\t\t});\n\t}\n}\n\nexport default SnackOrBoozeApi;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Menu from './ProductMenu';\nimport Product from './ProductItem';\nimport NewProductForm from './NewProductForm';\nimport SnackOrBoozeApi from './Api';\n\nconst Routes = () => {\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ snacks, setSnacks ] = useState([]);\n\tconst [ drinks, setDrinks ] = useState([]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tasync function getProducts() {\n\t\t\t\tlet snacks = await SnackOrBoozeApi.getProducts('snacks');\n\t\t\t\tlet drinks = await SnackOrBoozeApi.getProducts('drinks');\n\t\t\t\tsetSnacks(snacks);\n\t\t\t\tsetDrinks(drinks);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t\tgetProducts();\n\t\t},\n\t\t[ snacks, drinks ]\n\t);\n\n\tconst addProduct = (json) => {\n\t\tasync function createProduct() {\n\t\t\tawait SnackOrBoozeApi.createProduct(json);\n\t\t}\n\t\tcreateProduct();\n\t};\n\n\tif (isLoading) {\n\t\treturn <p>Loading &hellip;</p>;\n\t}\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home snacks={snacks} drinks={drinks} />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/Snacks\">\n\t\t\t\t<Menu products={snacks} title=\"Snacks\" />\n\t\t\t</Route>\n\t\t\t<Route path=\"/Snacks/:id\">\n\t\t\t\t<Product items={snacks} cantFind=\"/snacks\" />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/Drinks\">\n\t\t\t\t<Menu products={drinks} title=\"Drinks\" />\n\t\t\t</Route>\n\t\t\t<Route path=\"/Drinks/:id\">\n\t\t\t\t<Product items={drinks} cantFind=\"/drinks\" />\n\t\t\t</Route>\n\t\t\t<Route path=\"/new-product\">\n\t\t\t\t<NewProductForm addProduct={addProduct} />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<p className=\"Error\">Hmmm. I can't seem to find what you want.</p>\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t<main>\n\t\t\t\t\t<Routes />\n\t\t\t\t</main>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}